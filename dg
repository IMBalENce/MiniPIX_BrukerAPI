[1mdiff --git a/acquisition_example.py b/acquisition_example.py[m
[1mnew file mode 100644[m
[1mindex 0000000..cc8b902[m
[1m--- /dev/null[m
[1m+++ b/acquisition_example.py[m
[36m@@ -0,0 +1,164 @@[m
[32m+[m[32m"""[m
[32m+[m[32mThis scripts shows how to measure with the detector with different options and how to get the measured data or save[m
[32m+[m[32mthem to the disk[m
[32m+[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32m# first list all Medipix/Timepix devices and use the first one:[m
[32m+[m[32mdevices = pixet.devicesByType(pixet.PX_DEVTYPE_MPX2)[m
[32m+[m[32mif not devices:[m
[32m+[m[32m    raise "No devices connected"[m
[32m+[m[32mdevice = devices[0] # use  the first device[m
[32m+[m
[32m+[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m#                      ACQUISITION EXAMPLE - SAVING TO FILE[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32mdef acqExample1():[m
[32m+[m[32m    #  take 10 frames from the device, 0.5 second long and save to file test.pmf[m
[32m+[m[32m    for i in range(10):[m
[32m+[m[32m        acqCount = 1[m
[32m+[m[32m        acqTime = 0.5 # in seconds, half second[m
[32m+[m[32m        outputFile = "test.pmf"[m
[32m+[m[32m        rc = device.doSimpleAcquisition(acqCount, acqTime, pixet.PX_FTYPE_AUTODETECT, outputFile)[m
[32m+[m[32m        print("Acquition: %d" % rc)[m
[32m+[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m#                      ACQUISITION EXAMPLE - INTEGRAL ACQUISITION[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32mdef acqExample2():[m
[32m+[m[32m    # does integral acquisition of 10 0.1s frames -> sums 10 frames of 0.1s to one and[m
[32m+[m[32m    # save to file[m
[32m+[m[32m    acqCount = 10[m
[32m+[m[32m    acqTime = 0.1 # in seconds, 0.1 s[m
[32m+[m[32m    outputFile = "test.pmf"[m
[32m+[m[32m    rc = device.doSimpleIntegralAcquisition(acqCount, acqTime, pixet.PX_FTYPE_AUTODETECT, outputFile)[m
[32m+[m[32m    print("Acquition: %d" % rc)[m
[32m+[m
[32m+[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m#                      ACQUISITION EXAMPLE - GETTING FRAME DATA[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32mdef acqExample3():[m
[32m+[m[32m    # acquisition 1 frame, 0.5 s acq time, no saving to file:[m
[32m+[m[32m    rc = device.doSimpleAcquisition(1, 0.5, pixet.PX_FTYPE_AUTODETECT, "")[m
[32m+[m[32m    print("Acquition: %d" % rc)[m
[32m+[m
[32m+[m[32m    # get last frame[m
[32m+[m[32m    frame = device.lastAcqFrameRefInc()[m
[32m+[m
[32m+[m[32m    # acqCount = device.acqFrameCount() # number of measured acquisitions (frames)[m
[32m+[m[32m    # frame = device.acqFrameRefInc(index) # get frame with index from last acquisition series[m
[32m+[m
[32m+[m[32m    # get frame data to python array/list:[m
[32m+[m[32m    data = frame.data()[m
[32m+[m
[32m+[m[32m    # just print first 10 values of frame[m
[32m+[m[32m    print(data[0:10])[m
[32m+[m
[32m+[m[32m    frame.destroy() # release the frame[m
[32m+[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m#                      ACQUISITION EXAMPLE - MORE COMPLEX e.g. triggers[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32mdef acqExample4():[m
[32m+[m[32m    # acquisition parameters[m
[32m+[m[32m    acqPars = pixet.MpxAcqParams()[m
[32m+[m[32m    acqPars.count = 1 # number of frames[m
[32m+[m[32m    acqPars.time = 0.5 # time of one frame[m
[32m+[m[32m    acqPars.mode = pixet.PX_ACQMODE_TRG_NO # trigger mode: pixet.PX_ACQMODE_TRG_NO, pixet.PX_ACQMODE_TRG_HWSTART, pixet.PX_ACQMODE_TRG_HWSTOP, pixet.PX_ACQMODE_TRGHWSTARTSTOP; pixet.PX_ACQMODE_TDI - tdi mode, pixet.PX_ACQMODE_COMPRESSED - compression enabled (ModuPIX)[m
[32m+[m[32m    acqPars.type = pixet.PX_ACQTYPE_FRAMES # or pixet.PX_ACQTYPE_TESTPULSES for test pulses[m
[32m+[m[32m    acqPars.outputType = pixet.PX_FTYPE_NONE # output file type, PX_FTYPE_XXX constants. For autodetect by file extension: pixet.PX_FTYPE_AUTODETECT[m
[32m+[m[32m    acqPars.fileName = "" # output file name[m
[32m+[m[32m    acqPars.spacing = 1 # spacing acquisition, mostly for test pulses[m
[32m+[m[32m    acqPars.integral = False # if the acquisition is integral -> only one frame created with sum of acqPars.count frames[m
[32m+[m[32m    acqPars.refreshDacs = False # refresh detector DAC before acquisition[m
[32m+[m[32m    acqPars.refreshPixCfg = False # refresh detector pixel configuration before acquisition[m
[32m+[m
[32m+[m[32m    # repeat parameters[m
[32m+[m[32m    repPars = pixet.MpxRepeatParams()[m
[32m+[m[32m    repPars.count = 1 # number of repetition. 1 = only one acquisition series made[m
[32m+[m[32m    repPars.delay = 0 # delay in seconds between repetitions[m
[32m+[m[32m    repPars.outputFlags = 0 # flags (mask of PX_REPEAT_XXX values) for specifing naming of files with repeat (create directories for each repeat PX_REPEAT_DIR, ...)[m
[32m+[m[32m    repPars.outputDigits = 0 # number of digits for repeat counter in file name, 0 - automatic[m
[32m+[m
[32m+[m[32m    rc = device.doAcquisition(acqPars, repPars, None)[m
[32m+[m[32m    print("Acquisition: %d" % rc)[m
[32m+[m[32m    # note : test pulses are not supported at the moment[m
[32m+[m[32m    pass[m
[32m+[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m#                      ACQUISITION EXAMPLE - TIME DELAYED INTEGRATION (TDI)[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32mdef acqExample5():[m
[32m+[m[32m    # measures two frames in tdi mode[m
[32m+[m[32m    acqPars = pixet.MpxAcqParams()[m
[32m+[m[32m    acqPars.count = 2 # number of frames[m
[32m+[m[32m    acqPars.time = 0.5 # time of one frame[m
[32m+[m[32m    acqPars.mode = pixet.PX_ACQMODE_TDI[m
[32m+[m[32m    acqPars.fileName = "" # output file name[m
[32m+[m[32m    repPars = pixet.MpxRepeatParams()[m
[32m+[m[32m    rc = device.doAcquisition(acqPars, repPars, None)[m
[32m+[m[32m    print("Acquisition: %d" % rc)[m
[32m+[m
[32m+[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m#                      ACQUISITION EXAMPLE ADVANCED ACQUISITION[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32mdef acqExample6():[m
[32m+[m[32m    acqCount = 10[m
[32m+[m[32m    acqTime = 0.1 # in seconds, 0.1 s[m
[32m+[m[32m    acqType = pixet.PX_ACQTYPE_FRAMES # pixet.PX_ACQTYPE_DATADRIVEN, pixet.PX_ACQTYPE_TESTPULSES[m
[32m+[m[32m    acqMode = pixet.PX_ACQMODE_NORMAL # pixet.PX_ACQMODE_TRG_HWSTART, pixet.PX_ACQMODE_TDI, ...[m
[32m+[m[32m    fileType = pixet.PX_FTYPE_AUTODETECT[m
[32m+[m[32m    fileFlags = 0[m
[32m+[m[32m    outputFile = "test.pmf"[m
[32m+[m[32m    device.doAdvancedAcquisition(acqCount, acqTime, acqType, acqMode, fileType, fileFlags, outputFile)[m
[32m+[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m#                      ACQUISITION EXAMPLE ADVANCED ACQUISITION - INTEGRAL[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32mdef acqExample7():[m
[32m+[m[32m    acqCount = 10[m
[32m+[m[32m    acqTime = 0.1 # in seconds, 0.1 s[m
[32m+[m[32m    acqType = pixet.PX_ACQTYPE_FRAMES # pixet.PX_ACQTYPE_DATADRIVEN, pixet.PX_ACQTYPE_TESTPULSES[m
[32m+[m[32m    acqMode = pixet.PX_ACQMODE_NORMAL # pixet.PX_ACQMODE_TRG_HWSTART, pixet.PX_ACQMODE_TDI, ...[m
[32m+[m[32m    fileType = pixet.PX_FTYPE_AUTODETECT[m
[32m+[m[32m    fileFlags = 0[m
[32m+[m[32m    outputFile = "test.pmf"[m
[32m+[m[32m    device.doAdvancedIntegralAcquisition(acqCount, acqTime, acqType, acqMode, fileType, fileFlags, outputFile)[m
[32m+[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m#                      ACQUISITION EXAMPLE ABORT ACQUISITION[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32mdef acqExample8():[m
[32m+[m[32m    device.abortOperation()  # aborts runnign acquisition[m
[32m+[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m#                      ACQUISITION EXAMPLE WITH CALLBACK FOR EACH FRAME[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mdef callback(value):[m
[32m+[m[32m    print("Callback " + str(value))[m
[32m+[m[32m    # frame = dev.lastAcqFrameRefInc()[m
[32m+[m[32m    # data = frame.data()[m
[32m+[m[32m    # frame.destroy()[m
[32m+[m
[32m+[m[32mdef acqExample9():[m
[32m+[m[32m    dev.registerEvent(pixet.PX_EVENT_ACQ_FINISHED, callback, callback)[m
[32m+[m[32m    dev.doSimpleAcquisition(20, 0.1, 0,  "")[m
[32m+[m[32m    dev.unregisterEvent(pixet.PX_EVENT_ACQ_FINISHED, callback, callback)[m
[32m+[m
[32m+[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m#                                   MAIN[m
[32m+[m[32m# -----------------------------------------------------------------------------------[m
[32m+[m[32m# uncomment the example you want to run[m
[32m+[m[32m#acqExample1()[m
[32m+[m[32m#acqExample2()[m
[32m+[m[32m#acqExample3()[m
[32m+[m[32m#acqExample4()[m
[32m+[m[32m#acqExample5()[m
[32m+[m[32m#acqExample6()[m
[32m+[m[32m#acqExample7()[m
[32m+[m[32m#acqExample8()[m
[1mdiff --git a/main.py b/main.py[m
[1mindex d435fe3..4149c2e 100644[m
[1m--- a/main.py[m
[1m+++ b/main.py[m
[36m@@ -13,7 +13,7 @@[m [mimport detection as detection[m
 import localhost_client as localhost, utils[m
 import data_handling as storage[m
 [m
[31m-test_image = '01_gorelick.jpg'[m
[32m+[m[32m#test_image = '01_gorelick.jpg'[m
 [m
 [m
 class GUIMainWindow(gui_main.Ui_MainWindow, QtWidgets.QMainWindow):[m
